CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

SELECT*
FROM BIT_DB.Spotifydata;
This query selects all the data in the Spotify table.

SELECT AVG(danceability), artist_name, track_name
FROM BIT_DB.Spotifydata
The above query selects the average daceability of a song, the artist name, and the track name. This is helpful to determine which song by which artist would most likely result in creating a target audience to increase 
sales to said audience. 

SELECT MAX(duration_ms), artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY duration_ms desc;
The above query points out the max duration of a song along with the aritst's name. This is grouped by artist name and duration is shown in descending order. This query helps to visualize the longest running tracks.

SELECT MAX(popularity), artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name;
The above query points out the most popular song by each artist. This query is helpful in determining which song is most popular and could yield increased sales once popularity is determined.

SELECT AVG(danceability), artist_name, popularity, track_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity LIMIT 10;

SELECT MAX(energy), track_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY energy LIMIT 20;
